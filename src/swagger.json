{
  "openapi": "3.0.1",
  "info": {
    "title": "Voting System API",
    "description": "",
    "version": "1.0.0",
    "contact": {
      "email": "moses.ngan.tf@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Campaign",
      "description": "Endpoints for Campaign model."
    },
    {
      "name": "Vote",
      "description": "Endpoints for Vote model."
    }
  ],
  "paths": {
    "/campaigns": {
      "get" : {
        "summary": "User attempts to get all the campaigns.",
        "tags": ["Campaign"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All campaigns are reutrned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/campaign"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "User attempts to create a campaign.",
        "tags": ["Campaign"],
        "requestBody": {
          "description": "At least 2 candidates needed.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "$ref": "#/components/schemas/valueObject.campaignQuestion"
                  },
                  "startedAt": {
                    "$ref": "#/components/schemas/valueObject.formattedDateTimeString"
                  },
                  "endedAt": {
                    "$ref": "#/components/schemas/valueObject.formattedDateTimeString"
                  },
                  "candidateNames": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/valueObject.candidateName"
                    },
                    "minItems": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A new campaign is successfully created and returned in the response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/campaign"
                }
              }
            }
          },
          "422": {
            "description": "One of the following:<br>- Missing required property (e.g. Only 1 candidate name is provided.); or<br>- Invalid property value.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/422InvalidRequestBody"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/:id": {
      "delete": {
        "summary": "User attempts to delete a campaign.",
        "tags": ["Campaign"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Target campaign_id to be deleted.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The target campaign is deleted and no content is returned."
          },
          "404": {
            "description": "Campaign with the provided id doesn't exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/404NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/votes": {
      "post": {
        "summary": "User attempts to vote in a campaign.",
        "tags": ["Vote"],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hkidNumber": {
                    "$ref": "#/components/schemas/valueObject.hkidNumber"
                  },
                  "candidateId": {
                    "$ref": "#/components/schemas/valueObject.id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A vote is successfully submitted and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/vote"
                }
              }
            }
          },
          "422": {
            "description": "One of the following:<br>- Missing requried property.<br>- Invalid HKID number.<br>- Candidate doesn't exist.<br>- The campaign is ended.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/responses/422InvalidRequestBody"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "campaign": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/valueObject.id"
          },
          "question": {
            "$ref": "#/components/schemas/valueObject.campaignQuestion"
          },
          "startedAt": {
            "$ref": "#/components/schemas/valueObject.formattedDateTimeString"
          },
          "endedAt": {
            "$ref": "#/components/schemas/valueObject.formattedDateTimeString"
          },
          "candidates": {
            "type": "array",
            "items": {
              "$ref":"#/components/schemas/candidate"
            },
            "minItems": 2
          }
        }
      },
      "candidate": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/valueObject.id"
          },
          "name": {
            "$ref": "#/components/schemas/valueObject.candidateName"
          },
          "voteCount": {
            "type": "integer",
            "example": 192453
          }
        }
      },
      "vote": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/valueObject.id"
          },
          "hkidNumber": {
            "$ref": "#/components/schemas/valueObject.hkidNumber"
          },
          "candidateId": {
            "$ref": "#/components/schemas/valueObject.id"
          }
        }
      },
      "valueObject.id": {
        "type": "integer",
        "format": "int64",
        "example": 1234
      },
      "valueObject.formattedDateTimeString": {
        "type": "string",
        "format": "date-time",
        "example": "2022-09-01T09:00:00.000+08:00"
      },
      "valueObject.campaignQuestion": {
        "type": "string",
        "example": "Who is the best NBA player in history?"
      },
      "valueObject.candidateName": {
        "type": "string",
        "example": "Michael Jordan"
      },
      "valueObject.hkidNumber": {
        "type": "string",
        "example": "A123456(7)"
      }
    },
    "responses": {
      "404NotFound": {
        "description": "The required resource doesn't exist.",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "resource_not_found"
          },
          "message": {
            "type": "string",
            "example": "Recource doesn't exist."
          }
        }
      },
      "422InvalidRequestBody": {
        "description": "The values provided in the request body are not valid.",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "invalid_request_body"
          },
          "message": {
            "type": "string",
            "example": "Validation failed."
          }
        }
      }
    }
  }
}